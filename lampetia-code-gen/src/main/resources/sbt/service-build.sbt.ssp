#import(lampetia.metamodel.Module)
#import(lampetia.cg.cartridge.sbt.SbtProject)
#import(lampetia.extensions.Strings)
#import(com.typesafe.config.Config)
#import(Strings._)
<%@ val project: SbtProject %>
<%@ val module: Module%>
<%@ val config: Config%>

import lampetia.sbt.Common
import Common.Dependencies._
import com.typesafe.sbt.SbtScalariform.ScalariformKeys
import com.typesafe.sbt.SbtScalariform.scalariformSettings

import scalariform.formatter.preferences._

name := "${project.name.lispCase}"

unmanagedSourceDirectories in Compile <++= baseDirectory { base =>
  Seq(
    base / "src/generated/scala",
    base / "src/generated/java"
  )
}

unmanagedResourceDirectories in Compile <++= baseDirectory { base =>
  Seq(
    base / "src/generated/resources"
  )
}

val bootable = "${module.basePackage}.route.${module.name}SprayService"

mainClass in Compile := Some(bootable)

lazy val runAkka = taskKey[Unit](s"Start Akka kernel on $bootable")

fullRunTask(runAkka, Runtime, "akka.kernel.Main", bootable)

fork in runAkka := true

libraryDependencies ++= Common.Dependencies.serviceDependencies

libraryDependencies ++= Seq(${project.libraries.mkString(",\n")})

scalariformSettings

ScalariformKeys.preferences := ScalariformKeys.preferences.value
  .setPreference(AlignSingleLineCaseStatements, true)
  .setPreference(AlignSingleLineCaseStatements.MaxArrowIndent, 100)
  .setPreference(DoubleIndentClassDeclaration, true)
  .setPreference(PreserveDanglingCloseParenthesis, true)
#import(lampetia.metamodel.Module)
#import(lampetia.metamodel._)
#import(lampetia.extensions.Strings)
#import(lampetia.cg.extensions.Models)
#import(lampetia.cg.extensions.Scalate)
#import(com.typesafe.config.Config)
#import(Strings._)
#import(Models._)
<%@ val metamodels: Seq[Model] %>
<%@ val module: Module%>
<%@ val config: Config%>

package ${module.basePackage}.spec

import ${module.basePackage}.model._
import lampetia.model._
import nxt.security.model._
import org.joda.time.DateTime
import java.util.UUID
<%@val imports: Seq[String] %>
#for (i <- imports)
  import ${i}
#end


trait ${module.modelName}InstanceFactory {

#for (model <- metamodels.entityModels)
  def create${model.modelName.CamelCase} = ${model.generateInstance}

#end


}

object ${module.modelName}InstanceFactory extends ${module.modelName}InstanceFactory
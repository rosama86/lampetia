#import(lampetia.metamodel.Module)
#import(lampetia.metamodel._)
#import(lampetia.extensions.Strings)
#import(lampetia.cg.extensions.Models)
#import(lampetia.cg.extensions.Scalate)
#import(com.typesafe.config.Config)
#import(Strings._)
#import(Models._)
<%@ val metamodels: Seq[Model] %>
<%@ val module: Module%>
<%@ val config: Config%>
package ${module.basePackage}.format
<%--

import lampetia.format.JsonFormat
import ${module.basePackage}.model._
import play.api.libs.json._
--%>

trait ${module.name.toJavaIdentifier}JsonFormat extends JsonFormat {
<%--#for (m <- metamodels.jsonModels)
    implicit lazy val ${m.modelName.camelCase}JsonFormat: Format[${m.modelName}] =
      valueTypeFormat[${m.modelName}](${m.modelName})(_.value)
#end--%>
}
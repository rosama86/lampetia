#import(lampetia.metamodel.Module)
#import(lampetia.metamodel._)
#import(lampetia.extensions.Strings)
#import(lampetia.cg.extensions.Models)
#import(lampetia.cg.extensions.Scalate)
#import(com.typesafe.config.Config)
#import(Strings._)
#import(Models._)
<%@ val model: Entity %>
<%@ val module: Module %>
<%@ val metamodels: Seq[Model] %>
<%@ val config: Config%>
package ${module.basePackage}.service

import ${module.basePackage}.model._
import nxt.security.model._

trait ${model.modelName}Service {

  import  ${module.basePackage}.module.${module.modelName}Module.sql._
  import  ${module.basePackage}.module. ${module.modelName}Module.dialect._

#match (model)
  #case (m:Composite)
  // TODO
  #case (m: Entity)
  ${render("EntityService.scala.ssp", Map("model" -> m))}

  #otherwise
  #end


}
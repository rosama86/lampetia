#import(lampetia.metamodel.Module)
#import(lampetia.metamodel._)
#import(lampetia.extensions.Strings)
#import(lampetia.cg.extensions.Models)
#import(com.typesafe.config.Config)
#import(Strings._)
#import(Models._)
<%@ val metamodels: Seq[Model] %>
<%@ val module: Module%>
<%@ val config: Config%>
package  ${module.basePackage}.util

import ${module.basePackage}.module. ${module.modelName}Module
import  ${module.modelName}Module.dialect._
import  ${module.modelName}Module.sql._

trait DDL {
  def ddl =
    s"create schema $schema".sql +: (
    <%=metamodels.entityModels.map(m => s"${m.modelName}Model.createSql").mkString(" ++\n ")%>
    )

}

object DDLPrinter extends DDL {

  def main(args: Array[String]): Unit = {
    ddl.map(sql => s"<%="${sql.sqlString};"%>").foreach(println)
  }

}